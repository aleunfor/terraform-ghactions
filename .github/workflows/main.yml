# This is a basic workflow to help you get started with Actions

name: Terraform GitHub Action Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env: 
      ARM_SUBSCRIPTION_ID: '4965ab34-2ab6-4ba4-9b21-19d79bf8a708'
      ARM_TENANT_ID: '6182c7fa-8fbd-420a-8d21-e4215cbcf790'
      ARM_CLIENT_ID: '9e109c92-ea6a-404e-8940-729160336dfd'
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      AZURE_STORAGE: 'terraformahermosilla1324'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: azure-resource-login
        uses: Azure/azure-resource-login-action@v1.0.0
        with:
        # Azure credentials for the service principal to log in
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: chmod +x ./tstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}

      - name: HashiCorp - Setup Terraform
      # You may pin to the exact commit or the version.
        uses: hashicorp/setup-terraform@17d4c9b8043b238f6f35641cdd8433da1e6f3867
      
      - name: Terraform init
        run: terraform init -backend-config="storage_acount_name=${{ env.AZURE_STORAGE }}"
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan
